Question 1 (50 Points)
The following figure shows the first few blocks for a RAID 0 (striped) volume with 5 disks and a stripe size of 2 (512-byte) sectors. Each smaller rectangle corresponds to a single sector; the upper number is its LBA (logical block address) in the volume, and the lower number is its LBA in the individual disk (numbered at top) Note that each chunk (“strip”) within a stripe set is 2 sectors, so going vertically you see LBAs 0 through 7 for each of the 5 disks.

Stripe  disk
 set      0         1         2         3         4
  0   | 0 | 1 | | 2 | 3 | | 4 | 5 | | 6 | 7 | | 8 | 9 |
      | 0 | 1 | | 0 | 1 | | 0 | 1 | | 0 | 1 | | 0 | 1 |

  1   | 10| 11| | 12| 13| | 14| 15| | 16| 17| | 18| 19|
      | 2 | 3 | | 2 | 3 | | 2 | 3 | | 2 | 3 | | 2 | 3 |

  2   | 20| 21| | 22| 23| | 24| 25| | 26| 27| | 28| 29|
      | 4 | 5 | | 4 | 5 | | 4 | 5 | | 4 | 5 | | 4 | 5 |

  3   | 30| 31| | 32| 33| | 34| 35| | 36| 37| | 38| 39|
      | 6 | 7 | | 6 | 7 | | 6 | 7 | | 6 | 7 | | 6 | 7 |



Read and write requests are sent to the RAID controller and must be translated into one or more read or write requests to individual disks. Each individual request is targeted to a single disk and specifies a starting LBA and a length (in sectors) to identify a contiguous sequence of 1 or more sectors. Given the following operations on the RAID 0 volume, translate them to the corresponding read or write operations, giving type (read or write), disk number, LBA, and length for each operation.

write(LBA=24, count=7)
read(LBA=13, count=12)
Your answer should give a sequence of disk operations, with 4 values specified per operation:

1. read or write
2. disk number (0 through 4)
3. starting LBA for operation
4. length of operation (in sectors)
Note that although at some level of abstraction there is only a single correct answer to this question, there are multiple ways to express that answer in terms of disk reads and writes. As a simple example, read, disk0, LBA=10, len=2 followed by read, disk1, LBA=12, len=2 is equivalent to the single operation read, disk0, LBA=10, len=4.

Question 1
A. write(LBA=24, count=7)

1. write, disk2, LBA=4, len=2
2. write, disk3, LBA=4, len=2
3. write, disk4, LBA=4, len=2
4. write, disk0, LBA=6, len=1

B. read(LBA=13, count=12)

1. read, disk1, LBA=2, len=1
2. read, disk2, LBA=2, len=2
3. read, disk3, LBA=2, len=2
4. read, disk4, LBA=2, len=2
5. read, disk0, LBA=4, len=2
6. read, disk1, LBA=4, len=2
7. read, disk2, LBA=4, len=1


Question 2 (50 Points)
The following diagram shows a 5-disk RAID 4 array, again with a stripe size of 2 sectors. Sectors in the RAID volume and on individual disks are indicated as above.

Stripe  disk
 set      0         1         2         3         4
  0   | 0 | 1 | | 2 | 3 | | 4 | 5 | | 6 | 7 | | P | P |
      | 0 | 1 | | 0 | 1 | | 0 | 1 | | 0 | 1 | | 0 | 1 |

  1   | 8 | 9 | | 10| 11| | 12| 13| | 14| 15| | P | P |
      | 2 | 3 | | 2 | 3 | | 2 | 3 | | 2 | 3 | | 2 | 3 |

  2   | 16| 17| | 18| 19| | 20| 21| | 22| 23| | P | P |
      | 4 | 5 | | 4 | 5 | | 4 | 5 | | 4 | 5 | | 4 | 5 |

  3   | 24| 25| | 26| 27| | 28| 29| | 30| 31| | P | P |
      | 6 | 7 | | 6 | 7 | | 6 | 7 | | 6 | 7 | | 6 | 7 |

Given the following operations on the RAID 4 volume, translate them to the corresponding read or write operations, giving type (read or write), disk number, LBA, and length for each operation. There are several ways in which (B) and (C) may be performed; for each give the one resulting in the fewest resulting read and write operations.

read(LBA=3, length=12)
write(LBA=3, length=12)
write(LBA=16, length=8)
Question 2

In A, we need to read all the data and parity in the stripe which can be used in verification. Also, you can read the data only you needed if you don't care the parity.

In B, I read all data needs less reading and writing.

In C, write parity dircetly since all the data is here because we have all the info in the stripe when writing this large data.

A. read(LBA=3, length=12)

// first method, all data is read for verification
1. read, disk0, LBA=0, len=2
2. read, disk1, LBA=0, len=2
3. read, disk2, LBA=0, len=2
4. read, disk3, LBA=0, len=2
5. read, disk4, LBA=0, len=2
6. read, disk0, LBA=2, len=2
7. read, disk1, LBA=2, len=2
8. read, disk2, LBA=2, len=2
9. read, disk3, LBA=2, len=2
10. read, disk4, LBA=2, len=2

// second method, only data needed is read
1. read, disk1, LBA=1, len=1
2. read, disk2, LBA=0, len=2
3. read, disk3, LBA=0, len=2
4. read, disk0, LBA=2, len=2
5. read, disk1, LBA=2, len=2
6. read, disk2, LBA=2, len=2
7. read, disk3, LBA=2, len=1


B. write(LBA=3, length=12)

1. read, disk0, LBA=0, len=2
2. read, disk1, LBA=0, len=1
3. write, disk1, LBA=1, len=1
4. write, disk2, LBA=0, len=2
5. write, disk3, LBA=0, len=2
6. write, disk4, LBA=0, len=2 (parity update)
7. write, disk0, LBA=2, len=2
8. write, disk1, LBA=2, len=2
9. write, disk2, LBA=2, len=2
10. write, disk3, LBA=2, len=1
11. read, disk3, LBA=3, len=1
12. write, disk4, LBA=2, len=2 (parity update)

C. write(LBA=16, length=8)

1. write, disk0, LBA=4, len=2
2. write, disk1, LBA=4, len=2
3. write, disk2, LBA=4, len=2
4. write, disk3, LBA=4, len=2
5. write, disk4, LBA=4, len=2 (parity update)

